# Mageplaza
#
# NOTICE OF LICENSE
#
# This source file is subject to the Mageplaza.com license that is
# available through the world-wide-web at this URL:
# https://www.mageplaza.com/LICENSE.txt
#
# DISCLAIMER
#
# Do not edit or add to this file if you wish to upgrade this extension to newer
# version in the future.
#
# @category    Mageplaza
# @package     Mageplaza_RMAGraphQl
# @copyright   Copyright (c) Mageplaza (https://www.mageplaza.com/)
# @license     https://www.mageplaza.com/LICENSE.txt

type Query {
    mpRMAConfig(
        storeId: String @doc(description: "Get Config by Store")
    ):String @resolver(class: "Mageplaza\\RMAGraphQl\\Model\\Resolver\\GetReasonAndSolution") @doc(description: "Query to get reason and solution data in config.")
}

type Customer {
    mp_rma(
        filter: MpRmaRequestsFilterInput @doc(description: "Identifies which MpRmaRequestsFilterInput attributes to search for and return.")
        pageSize: Int = 5 @doc(description: "How many items should show on the page?")
        currentPage: Int = 1 @doc(description: "Allow page number to start with 1")
    ):MpRmaRequestsListOutput @doc(description: "RMA Customer Requests") @resolver(class: "Mageplaza\\RMAGraphQl\\Model\\Resolver\\RMARequestProvider")
}

type Mutation {
    mpRMARequestCancel (
        request_id: Int! @doc(description: "Request ID")
    ): Boolean @resolver(class: "Mageplaza\\RMAGraphQl\\Model\\Resolver\\CancelRequest") @doc(description: "Cancel the request")
    mpRMARequestConversation (
        request_id: Int! @doc(description: "Request Id")
        content: String @doc(description: "Content")
        upload: [MpRmaUploadInput] @doc(description: "Files")
    ): MpRmaRequestReplyOutput @resolver(class: "Mageplaza\\RMAGraphQl\\Model\\Resolver\\ReplyRequest") @doc(description: "Reply the request")
    mpRMARequest (
        order_increment_id: String! @doc(description: "Order Increment Id")
        comment: String @doc(description: "Comment")
        status_id: Int @doc(description: "Status Id")
        upload: [MpRmaUploadInput] @doc(description: "Files")
        request_item: [MpRmaRequestItemsInput] @doc(description: "RMA Customer Requests Item")
        reason: String @doc(description: "Reason")
        solution: String @doc(description: "Solution")
        additional_fields: [MpRmaAdditionalFieldsInput] @doc(description: "Additional Fields")
    ): MpRMACustomersRequestOutput @resolver(class: "Mageplaza\\RMAGraphQl\\Model\\Resolver\\CreateRequest") @doc(description: "Create a new Request")
    mpRMAGuestRequest (
        order_increment_id: String! @doc(description: "Order Increment Id")
        guest_data: MpRmaGuestDataInput @doc(description: "Guest Data")
        comment: String @doc(description: "Comment")
        upload: [MpRmaUploadInput] @doc(description: "Files")
        request_item: [MpRmaRequestItemsInput] @doc(description: "RMA Customer Requests Item")
    ): MpRMACustomersRequestOutput @resolver(class: "Mageplaza\\RMAGraphQl\\Model\\Resolver\\CreateGuestRequest") @doc(description: "Create a new Guest Request")
}

input MpRmaRequestsFilterInput {
    request_id: FilterTypeInput @doc(description: "Request Id")
    order_id: FilterTypeInput @doc(description: "Order Id")
    order_increment_id: FilterTypeInput @doc(description: "Order Increment Id")
    increment_id: FilterTypeInput @doc(description: "Increment Id")
    status_id: FilterTypeInput @doc(description: "Status Id")
    is_canceled: FilterTypeInput @doc(description: "Is Canceled")
    store_id: FilterTypeInput @doc(description: "Store Id")
    comment: FilterTypeInput @doc(description: "Comment")
    last_responded_by: FilterTypeInput @doc(description: "Last Responded By")
    customer_email: FilterTypeInput @doc(description: "Customer Email")
    updated_at: FilterTypeInput @doc(description: "Updated At")
    created_at: FilterTypeInput @doc(description: "Created At")
}

type MpRmaRequestsListOutput {
    total_count: Int @doc(description: "The total number of results returned when a query is applied")
    items: [MpRMACustomersRequestOutput] @doc(description: "Requests data is satisfied")
    page_info: PageInfo @doc(description: "An object that includes the pageSize and currentPage values specified in the query.")
}

type MpRMACustomersRequestOutput {
    request_id: Int @doc(description: "Request Id")
    order_id: Int @doc(description: "Order Id")
    order_increment_id: String @doc(description: "Order Increment Id")
    increment_id: String @doc(description: "Increment Id")
    status_id: Int @doc(description: "Status Id")
    is_canceled: Int @doc(description: "Is Canceled")
    store_id: Int @doc(description: "Store Id")
    comment: String @doc(description: "Comment")
    files: [String] @doc(description: "Files")
    last_responded_by: String @doc(description: "Last Responded By")
    customer_email: String @doc(description: "Customer Email")
    updated_at: String @doc(description: "Updated At")
    created_at: String @doc(description: "Created At")
    request_item: [MpRmaRequestItemsOutput] @doc(description: "RMA Customer Requests Item")
    request_reply: [MpRmaRequestReplyOutput] @doc(description: "RMA Customer Requests Reply")
    request_shipping_label: [MpRmaRequestShippingLabelsOutput] @doc(description: "RMA Customer Requests Shipping Label")
}

type MpRmaRequestItemsOutput {
    item_id: Int @doc(description: "Item Id")
    request_id: Int @doc(description: "Request Id")
    product_id: Int @doc(description: "Product Id")
    order_item_id: Int @doc(description: "Order Item Id")
    name: String @doc(description: "Name")
    sku: String @doc(description: "Sku")
    qty_rma: Float @doc(description: "Qty Rma")
    price: Float @doc(description: "Price")
    price_returned: Float @doc(description: "Price Returned")
    reason: String @doc(description: "Reason")
    solution: String @doc(description: "Solution")
    additional_fields: String @doc(description: "Additional Fields")
    created_at: String @doc(description: "Created At")
}

type MpRmaRequestReplyOutput {
  reply_id: Int @doc(description: "Reply Id")
  request_id: Int @doc(description: "Request Id")
  is_customer_notified: Int @doc(description: "Is Customer Notified")
  is_visible_on_front: Int @doc(description: "Is Visible On Front")
  author_name: String @doc(description: "Author Name")
  type: Int @doc(description: "Type")
  content: String @doc(description: "Content")
  files: [String] @doc(description: "Files")
  created_at: String @doc(description: "Created At")
}

type MpRmaRequestShippingLabelsOutput {
  shipping_label_id: Int @doc(description: "Shipping Label Id")
  request_id: Int @doc(description: "Request Id")
}

input MpRmaRequestItemsInput {
    product_id: Int @doc(description: "Product Id")
    qty_rma: Float @doc(description: "Qty Rma")
    reason: String @doc(description: "Reason")
    solution: String @doc(description: "Solution")
    additional_fields: [MpRmaAdditionalFieldsInput] @doc(description: "Additional Fields")
}

input MpRmaUploadInput {
    name: String @doc(description: "Name")
    base64_encoded_data: String @doc(description: "Base64 Encoded Data")
}

input MpRmaGuestDataInput {
    billing_last_name: String! @doc(description: "Billing Last Name")
    find_by: String! @doc(description: "Find By")
    email: String @doc(description: "Email")
    zip_code: String @doc(description: "Zip code")
}

input MpRmaAdditionalFieldsInput {
    value: String @doc(description: "Value")
    content: String @doc(description: "Content")
}

type PageInfo {
    pageSize: Int @doc(description: "How many items should show on the page.")
    currentPage: Int @doc(description: "Specifies which page of results to return.")
    hasNextPage: Boolean @doc(description: "Has next page.")
    hasPreviousPage: Boolean @doc(description: "Has previous page.")
    startPage: Int @doc(description: "Start page.")
    endPage: Int @doc(description: "End page.")
}